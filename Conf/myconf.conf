
input {
  file {
   path => "/var/log/suricata/fast.log"
   type => "Suricata"
 }
  file {
   path=> "/var/log/snort/alert"
   type => "Snort"
 }
}

filter {
if [type] == "Suricata"
{
 grok {
  match => {
   "message" => "%{NOTSPACE:timestamp}  \[\*\*] \[%{NUMBER:n1}:%{NUMBER:n2}:%{NUMBER:n3}] %{CISCO_REASON:desc} \[\*\*] \[Classification: %{CISCO_REASON:event}] \[Priority: %{NUMBER:level}] \{%{URIPROTO:protocol}} %{IP:srcip}:%{NUMBER:sport} -> %{IP:dstip}:%{NUMBER:dport}"
  }
 }
 date {
 match => [ "timestamp", "MM/dd/yyyy-HH:mm:ss.SSSSSS" ]
 target => "@timestamp"
 remove_field => [ "timestamp" ]
 }
}
if [type] == "Snort"
{
 grok {
  match => {
   "message" => "%{NOTSPACE:timestamp}  \[\*\*] \[%{NUMBER:n1}:%{NUMBER:n2}:%{NUMBER:n3}] %{CISCO_REASON:desc} \[\*\*] \[Classification: %{CISCO_REASON:event}] \[Priority: %{NUMBER:level}] \{%{URIPROTO:protocol}} %{IP:srcip}(?:%{NUMBER:sport})? -> %{IP:dstip}(?:%{NUMBER:dport})?"
  }
 }
 date {
  match => [ "timestamp", "MM/dd-HH:mm:ss.SSSSSS" ]
  target => "@timestamp"
  remove_field => [ "timestamp" ]
 }
}
 mutate { rename => {"type" => "product"} }
 mutate { remove_field => ["n1","n2","n3","@version",level] }
}

output {
  file {
   path => "/var/log/logstash/idmef"
   codec => idmef 
 }
}
